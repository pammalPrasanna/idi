package {{(cleanName .AppName)}}

import (
	rest "{{.ProjectName}}/internal/apps/{{.AppName}}/internal/adapters/{{.RouterName}}"
	{{if (ne .DBName "")}}"{{.ProjectName}}/internal/apps/{{.AppName}}/internal/adapters/{{.DBName}}"{{end}}
	"{{.ProjectName}}/internal/lib"
	"{{.ProjectName}}/internal/apps/{{.AppName}}/internal/application"
)

var {{(cleanName .AppName)}}App *application.{{capitalize (cleanName .AppName)}}

func {{ capitalize (cleanName .AppName) }}App() *application.{{ capitalize (cleanName .AppName) }} {
 	return {{(cleanName .AppName)}}App
}

func InitApp(rootApp lib.IApp) {
	{{if (ne .DBName "")}}
		// create app repository
		{{(cleanName .AppName)}}Repo := {{.DBName}}.NewRepository(rootApp.{{capitalize .DBName}}(), rootApp.Logger())
		// create app with repository
		{{(cleanName .AppName)}}App = application.New(rootApp, {{ (cleanName .AppName) }}Repo)
	{{else}}
		{{(cleanName .AppName)}}App = application.New(rootApp)
	{{end}}


	// register routes if needed
	rest.RegisterRoutes(rootApp, {{(cleanName .AppName)}}App)
}
