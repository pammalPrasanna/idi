package main

import (
	"fmt"
	"os"
	"runtime/debug"

	"{{.ProjectName}}/cmd/api"
	"{{.ProjectName}}/internal/lib"
)

func main() {
	{{.Alias}}, err := lib.{{capitalize .Alias}}()
	if err != nil {
		fmt.Println(err)
		trace := string(debug.Stack())
		fmt.Println(trace)
		os.Exit(1)
	}

	{{if (ne .DBName "")}}
	// handle DB close on application exit
	defer func() {
		if err := {{.Alias}}.{{capitalize .DBName}}().Close(); err != nil {
			{{.Alias}}.Logger().Error("unable to close {{capitalize .DBName}}", "{{capitalize .DBName}}.Close()", err)
		} else {
			{{.Alias}}.Logger().Info("closed {{capitalize .DBName}} successfully")
		}
	}()
	{{end}}

	err = api.Main({{.Alias}})
	if err != nil {
		trace := string(debug.Stack())
		{{.Alias}}.Logger().Error("error: ", err)
		{{.Alias}}.Logger().Error(err.Error(), "trace", trace)
		os.Exit(1)
	}
}

